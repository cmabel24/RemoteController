/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_SERIALCOMMUNICATIONS_PB_H_INCLUDED
#define PB_SERIALCOMMUNICATIONS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ControllerCommands {
    int32_t a0;
    int32_t a1;
    int32_t a2;
    int32_t a3;
    bool d2;
    bool d3;
    bool d4;
    bool d5;
    bool d6;
    bool d8;
    bool d9;
} ControllerCommands;

typedef struct _RoverTellemetry {
    bool faultLS;
    bool faultRS;
    uint32_t motorAmpsLS;
    uint32_t motorAmpsRS;
    uint32_t vBatt;
} RoverTellemetry;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ControllerCommands_init_default          {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define RoverTellemetry_init_default             {0, 0, 0, 0, 0}
#define ControllerCommands_init_zero             {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define RoverTellemetry_init_zero                {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ControllerCommands_a0_tag                1
#define ControllerCommands_a1_tag                2
#define ControllerCommands_a2_tag                3
#define ControllerCommands_a3_tag                4
#define ControllerCommands_d2_tag                5
#define ControllerCommands_d3_tag                6
#define ControllerCommands_d4_tag                7
#define ControllerCommands_d5_tag                8
#define ControllerCommands_d6_tag                9
#define ControllerCommands_d8_tag                10
#define ControllerCommands_d9_tag                11
#define RoverTellemetry_faultLS_tag              1
#define RoverTellemetry_faultRS_tag              2
#define RoverTellemetry_motorAmpsLS_tag          3
#define RoverTellemetry_motorAmpsRS_tag          4
#define RoverTellemetry_vBatt_tag                5

/* Struct field encoding specification for nanopb */
#define ControllerCommands_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    a0,                1) \
X(a, STATIC,   SINGULAR, INT32,    a1,                2) \
X(a, STATIC,   SINGULAR, INT32,    a2,                3) \
X(a, STATIC,   SINGULAR, INT32,    a3,                4) \
X(a, STATIC,   SINGULAR, BOOL,     d2,                5) \
X(a, STATIC,   SINGULAR, BOOL,     d3,                6) \
X(a, STATIC,   SINGULAR, BOOL,     d4,                7) \
X(a, STATIC,   SINGULAR, BOOL,     d5,                8) \
X(a, STATIC,   SINGULAR, BOOL,     d6,                9) \
X(a, STATIC,   SINGULAR, BOOL,     d8,               10) \
X(a, STATIC,   SINGULAR, BOOL,     d9,               11)
#define ControllerCommands_CALLBACK NULL
#define ControllerCommands_DEFAULT NULL

#define RoverTellemetry_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     faultLS,           1) \
X(a, STATIC,   SINGULAR, BOOL,     faultRS,           2) \
X(a, STATIC,   SINGULAR, UINT32,   motorAmpsLS,       3) \
X(a, STATIC,   SINGULAR, UINT32,   motorAmpsRS,       4) \
X(a, STATIC,   SINGULAR, UINT32,   vBatt,             5)
#define RoverTellemetry_CALLBACK NULL
#define RoverTellemetry_DEFAULT NULL

extern const pb_msgdesc_t ControllerCommands_msg;
extern const pb_msgdesc_t RoverTellemetry_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ControllerCommands_fields &ControllerCommands_msg
#define RoverTellemetry_fields &RoverTellemetry_msg

/* Maximum encoded size of messages (where known) */
#define ControllerCommands_size                  58
#define RoverTellemetry_size                     22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
